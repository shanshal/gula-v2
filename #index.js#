const express = require('express');
const bodyParser = require('body-parser');
const swaggerUi = require('swagger-ui-express');
const swaggerSpec = require('./swagger');
const app = express();
const port = 8080;

const userRoutes = require('./routes/userRoutes');
const surveyRoutes = require('./routes/surveyRoutes');
const questionRoutes = require('./routes/questionRoutes');
const answerRoutes = require('./routes/answerRoutes');
const scoringRoutes = require('./routes/scoringRoutes');


app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Swagger documentation
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec, {
  explorer: true,
  customCss: '.swagger-ui .topbar { display: none }',
  customSiteTitle: 'Gula Leadership Survey API Documentation'
}));

// API documentation JSON  "scoringType": "formula",

  "responseCount": 4

}

<Result:', JSON.stringify(result, null, 2));\n"

Testing formula locally...

scoreFormula - responses: { '133': 8, '134': 7, '135': 7, '136': 3 }

scoreFormula - scoring config: {

  type: 'formula',

  expression: '(Q1 + Q2) * 0.136 + Q3 * 0.133 - Q4 * 0.134'

}

scoreFormula - questionOrderMap: { '1': 133, '2': 134, '3': 135, '4': 136 }

scoreFormula - mapped values: { '133': 8, '134': 7, '135': 7, '136': 3 }

scoreFormula - weighted values: { '133': 8, '134': 7, '135': 7, '136': 3 }

Evaluating expression: (Q1 + Q2) * 0.136 + Q3 * 0.133 - Q4 * 0.134

With variables: { '133': 8, '134': 7, '135': 7, '136': 3 }

With question order map: { '1': 133, '2': 134, '3': 135, '4': 136 }

Replaced Q1 with 8 (from question ID 133)

Replaced Q2 with 7 (from question ID 134)

Replaced Q3 with 7 (from question ID 135)

Replaced Q4 with 3 (from question ID 136)

Expression after variable substitution: (8 + 7) * 0.136 + 7 * 0.133 - 3 * 0.134

Expression result: 2.569

scoreFormula - final total: 2.569

Result: {

  "score": 2.57,

  "total": 2.57,


app.get('/api-docs.json', (req, res) => {
  res.setHeader('Content-Type', 'application/json');
  res.send(swaggerSpec);
});

app.get('/', (req, res) => {
  res.json({ 
    info: 'Gula Leadership Survey Backend',
    version: '1.0.0',
    documentation: '/api-docs',
    endpoints: {
      users: '/users',
      surveys: '/surveys', 
      questions: '/questions',
      answers: '/answers',
      scoring: '/scoring'
    }
  });
});

app.use('/users', userRoutes);
app.use('/surveys', surveyRoutes);
app.use('/questions', questionRoutes);
app.use('/answers', answerRoutes);
app.use('/scoring', scoringRoutes);

app.listen(port, () => {
  console.log(`App running on port ${port}.`);
});
